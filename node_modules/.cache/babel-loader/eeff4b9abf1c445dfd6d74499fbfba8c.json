{"ast":null,"code":"import _objectSpread from \"/Users/jc/Documents/rancho/rancho-client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/jc/Documents/rancho/rancho-client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/jc/Documents/rancho/rancho-client/src/components/EditEntryForm.jsx\";\nimport React, { useState } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport API from '../utils/API';\nimport Swal from 'sweetalert2';\n\nconst EditEntryForm = props => {\n  const user = props.user;\n  const headers = {\n    'Authorization': user.token\n  };\n  const _props$entry = props.entry,\n        id = _props$entry.id,\n        type = _props$entry.type,\n        properties = _props$entry.properties;\n\n  const _useState = useState({}),\n        _useState2 = _slicedToArray(_useState, 2),\n        errors = _useState2[0],\n        setErrors = _useState2[1];\n\n  const _useState3 = useState({\n    id,\n    type,\n    properties: JSON.stringify(properties)\n  }),\n        _useState4 = _slicedToArray(_useState3, 2),\n        form = _useState4[0],\n        setValues = _useState4[1];\n\n  console.log(form);\n\n  const handleInput = event => {\n    // We set the input value\n    setValues(_objectSpread({}, form, {\n      [event.target.name]: event.target.value\n    })); // We clear the error\n\n    let newErrors = errors;\n    delete newErrors[event.target.name];\n    setErrors(newErrors);\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault(); // console.log(form);\n\n    let res = await API.authPostRequest(`/entries/${form.id}/edit`, form, headers);\n\n    if (!res.success) {\n      setErrors(res.err);\n      Swal.fire({\n        title: '¡Error!',\n        text: res.message,\n        icon: 'error'\n      });\n    }\n\n    if (res.success) {\n      Swal.fire({\n        title: '¡Éxito!',\n        text: res.message,\n        icon: 'success'\n      });\n      props.afterSubmit();\n    } // console.log(res);\n    // console.log(errors);\n\n  };\n\n  return React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    controlId: \"entryId\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"ID\"), React.createElement(Form.Control, {\n    type: \"text\",\n    name: \"id\",\n    onChange: handleInput,\n    value: form.id,\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), errors.hasOwnProperty(\"id\") ? React.createElement(\"span\", {\n    className: \"text-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, errors.id) : null), React.createElement(Form.Group, {\n    controlId: \"entryType\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"Tipo\"), React.createElement(Form.Control, {\n    type: \"number\",\n    name: \"type\",\n    onChange: handleInput,\n    value: form.type,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }), errors.hasOwnProperty(\"type\") ? React.createElement(\"span\", {\n    className: \"text-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, errors.type) : null), React.createElement(Form.Group, {\n    controlId: \"entryProperties\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"Propiedades\"), React.createElement(Form.Control, {\n    as: \"textarea\",\n    name: \"properties\",\n    onChange: handleInput,\n    value: form.properties,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }), errors.hasOwnProperty(\"properties\") ? React.createElement(\"span\", {\n    className: \"text-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, errors.properties) : null), React.createElement(Button, {\n    variant: \"success\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \"Actualizar\"));\n};\n\nexport default EditEntryForm;","map":{"version":3,"sources":["/Users/jc/Documents/rancho/rancho-client/src/components/EditEntryForm.jsx"],"names":["React","useState","Form","Button","API","Swal","EditEntryForm","props","user","headers","token","entry","id","type","properties","errors","setErrors","JSON","stringify","form","setValues","console","log","handleInput","event","target","name","value","newErrors","handleSubmit","preventDefault","res","authPostRequest","success","err","fire","title","text","message","icon","afterSubmit","hasOwnProperty"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport API from '../utils/API';\nimport Swal from 'sweetalert2';\n\n\nconst EditEntryForm = props => {\n  const { user } = props;\n  const headers = {\n    'Authorization': user.token\n  };\n\n  const { \n    id,\n    type,\n    properties\n    } = props.entry;\n\n  const [errors, setErrors] = useState({});\n\n  const [form, setValues] = useState({\n    id,\n    type,\n    properties: JSON.stringify(properties)\n  });\n  console.log(form);\n\n  const handleInput = event => {\n    // We set the input value\n    setValues({\n      ...form,\n      [event.target.name]: event.target.value\n    })\n    // We clear the error\n    let newErrors = errors;\n    delete newErrors[event.target.name];\n    setErrors(newErrors);\n  }\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    // console.log(form);\n    let res = await API.authPostRequest(`/entries/${form.id}/edit`, form, headers);\n    if(!res.success) {\n      setErrors(res.err);\n      Swal.fire({\n        title: '¡Error!',\n        text: res.message,\n        icon: 'error',\n      });\n    }\n    if(res.success) {\n      Swal.fire({\n        title: '¡Éxito!',\n        text: res.message,\n        icon: 'success',\n      });\n      props.afterSubmit();\n    }\n    // console.log(res);\n    // console.log(errors);\n  }\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Form.Group controlId=\"entryId\">\n        <Form.Label>ID</Form.Label>\n        <Form.Control\n          type=\"text\"\n          name=\"id\" \n          onChange={handleInput} \n          value={form.id}\n          disabled\n        />\n        { errors.hasOwnProperty(\"id\") ?\n          <span className=\"text-danger\">\n            {errors.id}\n          </span>\n          : null\n        }\n      </Form.Group>\n      <Form.Group controlId=\"entryType\">\n        <Form.Label>Tipo</Form.Label>\n        <Form.Control \n          type=\"number\" \n          name=\"type\" \n          onChange={handleInput}\n          value={form.type}\n        />\n        { errors.hasOwnProperty(\"type\") ?\n          <span className=\"text-danger\">\n            {errors.type}\n          </span>\n          : null\n        }\n      </Form.Group>\n      <Form.Group controlId=\"entryProperties\">\n        <Form.Label>Propiedades</Form.Label>\n        <Form.Control \n          as=\"textarea\"\n          name=\"properties\"\n          onChange={handleInput} \n          value={form.properties} \n        />\n        { errors.hasOwnProperty(\"properties\") ?\n          <span className=\"text-danger\">\n            {errors.properties}\n          </span>\n          : null\n        }\n      </Form.Group>\n      <Button variant=\"success\" type=\"submit\">\n        Actualizar\n      </Button>\n    </Form>\n  );\n}\n\nexport default EditEntryForm;"]},"metadata":{},"sourceType":"module"}