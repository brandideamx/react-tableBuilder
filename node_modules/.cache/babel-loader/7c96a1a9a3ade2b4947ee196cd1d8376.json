{"ast":null,"code":"import _objectSpread from \"/Users/jc/Documents/rancho/rancho-client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/jc/Documents/rancho/rancho-client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/jc/Documents/rancho/rancho-client/src/components/AddEntryForm.jsx\";\nimport React, { useState } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport API from '../utils/API';\nimport Swal from 'sweetalert2';\n\nconst AddEntryForm = props => {\n  const user = props.user;\n  const headers = {\n    'Authorization': user.token\n  };\n\n  const _useState = useState({}),\n        _useState2 = _slicedToArray(_useState, 2),\n        errors = _useState2[0],\n        setErrors = _useState2[1];\n\n  const _useState3 = useState({\n    id: '',\n    type: 0,\n    properties: {}\n  }),\n        _useState4 = _slicedToArray(_useState3, 2),\n        form = _useState4[0],\n        setValues = _useState4[1];\n\n  const handleInput = event => {\n    // We set the input value\n    setValues(_objectSpread({}, form, {\n      [event.target.name]: event.target.value\n    })); // We clear the error\n\n    let newErrors = errors;\n    delete newErrors[event.target.name];\n    setErrors(newErrors);\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault(); // console.log(form);\n\n    let res = await API.authPostRequest('/entries/add', form, headers);\n\n    if (!res.success) {\n      setErrors(res.err);\n      Swal.fire({\n        title: 'Error!',\n        text: res.message,\n        icon: 'error'\n      });\n    }\n\n    if (res.success) {\n      Swal.fire({\n        title: '¡Éxito!',\n        text: res.message,\n        icon: 'success'\n      });\n      props.afterSubmit();\n    } // console.log(res);\n    // console.log(errors);\n\n  };\n\n  return React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    controlId: \"entryId\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"ID\"), React.createElement(Form.Control, {\n    type: \"text\",\n    name: \"id\",\n    onChange: handleInput,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), errors.hasOwnProperty(\"id\") ? React.createElement(\"span\", {\n    className: \"text-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, errors.id) : null), React.createElement(Form.Group, {\n    controlId: \"entryType\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Tipo\"), React.createElement(Form.Control, {\n    type: \"number\",\n    name: \"type\",\n    onChange: handleInput,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), errors.hasOwnProperty(\"type\") ? React.createElement(\"span\", {\n    className: \"text-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, errors.type) : null), React.createElement(Form.Group, {\n    controlId: \"entryProperties\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"Propiedades\"), React.createElement(Form.Control, {\n    as: \"textarea\",\n    name: \"properties\",\n    onChange: handleInput,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), errors.hasOwnProperty(\"properties\") ? React.createElement(\"span\", {\n    className: \"text-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, errors.properties) : null), React.createElement(Button, {\n    variant: \"success\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"Guardar\"));\n};\n\nexport default AddEntryForm;","map":{"version":3,"sources":["/Users/jc/Documents/rancho/rancho-client/src/components/AddEntryForm.jsx"],"names":["React","useState","Form","Button","API","Swal","AddEntryForm","props","user","headers","token","errors","setErrors","id","type","properties","form","setValues","handleInput","event","target","name","value","newErrors","handleSubmit","preventDefault","res","authPostRequest","success","err","fire","title","text","message","icon","afterSubmit","hasOwnProperty"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport API from '../utils/API';\nimport Swal from 'sweetalert2';\n\nconst AddEntryForm = props => {\n  const { user } = props;\n  const headers = {\n    'Authorization': user.token\n  };\n  const [errors, setErrors] = useState({});\n\n  const [form, setValues] = useState({\n    id: '',\n    type: 0,\n    properties: {}\n  });\n\n  const handleInput = event => {\n    // We set the input value\n    setValues({\n      ...form,\n      [event.target.name]: event.target.value\n    })\n    // We clear the error\n    let newErrors = errors;\n    delete newErrors[event.target.name];\n    setErrors(newErrors);\n  }\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    // console.log(form);\n    let res = await API.authPostRequest('/entries/add', form, headers);\n    if(!res.success) {\n      setErrors(res.err);\n      Swal.fire({\n        title: 'Error!',\n        text: res.message,\n        icon: 'error',\n      });\n    }\n    if(res.success) {\n      Swal.fire({\n        title: '¡Éxito!',\n        text: res.message,\n        icon: 'success',\n      });\n      props.afterSubmit();\n    }\n    // console.log(res);\n    // console.log(errors);\n  }\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Form.Group controlId=\"entryId\">\n        <Form.Label>ID</Form.Label>\n        <Form.Control type=\"text\" name=\"id\" onChange={handleInput} />\n        { errors.hasOwnProperty(\"id\") ?\n          <span className=\"text-danger\">\n            {errors.id}\n          </span>\n          : null\n        }\n      </Form.Group>\n      <Form.Group controlId=\"entryType\">\n        <Form.Label>Tipo</Form.Label>\n        <Form.Control type=\"number\" name=\"type\" onChange={handleInput} />\n        { errors.hasOwnProperty(\"type\") ?\n          <span className=\"text-danger\">\n            {errors.type}\n          </span>\n          : null\n        }\n      </Form.Group>\n      <Form.Group controlId=\"entryProperties\">\n        <Form.Label>Propiedades</Form.Label>\n        <Form.Control as=\"textarea\" name=\"properties\" onChange={handleInput} />\n        { errors.hasOwnProperty(\"properties\") ?\n          <span className=\"text-danger\">\n            {errors.properties}\n          </span>\n          : null\n        }\n      </Form.Group>\n      <Button variant=\"success\" type=\"submit\">\n        Guardar\n      </Button>\n    </Form>\n  );\n}\n\nexport default AddEntryForm;"]},"metadata":{},"sourceType":"module"}